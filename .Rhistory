fit <- quickpsy(data,noise,accuracy,8,B = 1000)
plotcurves(fit)
fit <- quickpsy(data,noise,accuracy,8,B = 1000)
library(quickpsy)
fit <- quickpsy(data,noise,accuracy,8,B = 1000)
plotcurves(fit)
library(quickpsy)
fit <- quickpsy(data,noise,accuracy,8,B = 1000)
plotcurves(fit)
fit <- quickpsy(data,noise,accuracy)
plotcurve(fit)
plotcurves(fit)
fit <- quickpsy(data,noise,accuracy)
plot(fit)
fit <- quickpsy(data_agg,mn,accuracy)
plot(fit)
library(quickpsy)
fit <- quickpsy(data_agg,mn,accuracy)
plot(fit)
names(data_agg)
library(quickpsy)
fit <- quickpsy(data_agg,noise,mn)
plot(fit)
warnings()
data_l <- read.csv("~/wsl_files/ns201_code/analysis/accuracies.csv",header=TRUE)
library(quickpsy)
fit <- quickpsy(data_l,noise,mn)
library(ggplot2)
data <- read.csv("~/wsl_files/ns201_code/analysis/accuracies.csv")
data$abs_slope <- as.factor(data$abs_slope)
names(data)
data$accuracy <- data$accuracy/100.0
data_agg <- aggregate(x=data["accuracy"],by=list(slope=data$abs_slope,noise=data$noise),FUN=function(x) c(mn = mean(x), stdev = sd(x)))
data_agg <- do.call(data.frame,data_agg)
colnames(data_agg)[3] <- "mn"
colnames(data_agg)[4] <- "stdev"
names(data_agg)
p <- ggplot(data_agg[data_agg$slope==0.02,],aes(x=noise,y=mn,color=slope)) +
geom_point() +
geom_errorbar(aes(ymin=mn-stdev,ymax=mn+stdev))+
theme_minimal() + scale_x_reverse() +
xlab("Noise (SD of Gaussian noise)") + ylab("Accuracy") + labs(color="mean slope")
p +ylim(0,NA)
names(data_agg)
library(quickpsy)
fit <- quickpsy(data_l,noise,mn)
warnings()
plot(fit)
p +ylim(0,NA)
names(data)
fit <- quickpsy(data, noise, accuracy, grouping = c("exp_code", "abs_slope"))
qpdat
names(qpdat)
summary(qpdat)
library(quickpsy)
names(data)
fit <- quickpsy(data, noise, accuracy, grouping = c("exp_code", "abs_slope"),bootstrap = "none")
summary(qpdat)
warnings()
names(data)
library(quickpsy)
names(data)
fit <- quickpsy(data, noise, accuracy, grouping = c("abs_slope"),bootstrap = "none")
warnings()
head(qpdat)
ungroup(qpdat)
head(qpdat)
head(ungroup(qpdat))
library(quickpsy)
data <- read.csv("~/wsl_files/ns201_code/analysis/per_img.csv")
data <- read.csv("~/wsl_files/ns201_code/analysis/per_image.csv")
names(data)
fit <- quickpsy(data, noise, correct, grouping = c("exp_code","abs_slope"),bootstrap = "none")
fit <- quickpsy(data, noise, correct, grouping = c("exp_code","slope"),bootstrap = "none")
plot(fit,color=slope)
data <- read.csv("~/wsl_files/ns201_code/analysis/per_image.csv")
data$slope <- abs(data$slope)
names(data)
fit <- quickpsy(data, noise, correct, grouping = c("exp_code","slope"),bootstrap = "none")
plot(fit,color=slope)
head(ungroup(qpdat))
fit <- quickpsy(data, noise, correct, grouping = c("slope"),bootstrap = "none")
plot(fit,color=slope)
head(data)
plot(fit,color=slope) + xlim(0,1)
fit <- quickpsy(data, -noise, correct, grouping = c("slope"),bootstrap = "none")
plot(fit,color=slope) + xlim(0,1)
data$noise <- 1.0-data$noise
names(data)
fit <- quickpsy(data, noise, correct, grouping = c("slope"),bootstrap = "none")
plot(fit,color=slope) + xlim(0,1)
glm.fit <- glm(accuracy~noise,data=data_agg,family=binomial)
library(ggplot2)
data <- read.csv("~/wsl_files/ns201_code/analysis/accuracies.csv")
data$abs_slope <- as.factor(data$abs_slope)
names(data)
data$accuracy <- data$accuracy/100.0
data_agg <- aggregate(x=data["accuracy"],by=list(slope=data$abs_slope,noise=data$noise),FUN=function(x) c(mn = mean(x), stdev = sd(x)))
data_agg <- do.call(data.frame,data_agg)
colnames(data_agg)[3] <- "mn"
colnames(data_agg)[4] <- "stdev"
names(data_agg)
p <- ggplot(data_agg[data_agg$slope==0.02,],aes(x=noise,y=mn,color=slope)) +
geom_point() +
geom_errorbar(aes(ymin=mn-stdev,ymax=mn+stdev))+
theme_minimal() + scale_x_reverse() +
xlab("Noise (SD of Gaussian noise)") + ylab("Accuracy") + labs(color="mean slope")
p +ylim(0,NA)
glm.fit <- glm(accuracy~noise,data=data_agg,family=binomial)
glm.fit <- glm(accuracy~noise,data=mn,family=binomial)
glm.fit <- glm(mn~noise,data=data_agg,family=binomial)
install.packages("drc")
library(drc)
fit <- glm(accuracy~noise+slope,data=data,family=binomial())
library(ggplot2)
data <- read.csv("~/wsl_files/ns201_code/analysis/accuracies.csv")
data$abs_slope <- as.factor(data$abs_slope)
names(data)
data$accuracy <- data$accuracy/100.0
data_agg <- aggregate(x=data["accuracy"],by=list(slope=data$abs_slope,noise=data$noise),FUN=function(x) c(mn = mean(x), stdev = sd(x)))
data_agg <- do.call(data.frame,data_agg)
colnames(data_agg)[3] <- "mn"
colnames(data_agg)[4] <- "stdev"
names(data_agg)
p <- ggplot(data_agg[data_agg$slope==0.02,],aes(x=noise,y=mn,color=slope)) +
geom_point() +
geom_errorbar(aes(ymin=mn-stdev,ymax=mn+stdev))+
theme_minimal() + scale_x_reverse() +
xlab("Noise (SD of Gaussian noise)") + ylab("Accuracy") + labs(color="mean slope")
p +ylim(0,NA)
fit <- glm(accuracy~noise+abs_slope,data=data,family=binomial())
plot(fit)
summary(fit)
fit <- glm(accuracy~noise,data=data,family=binomial())
summary(fit)
plot(fit)
predict(fit, type="response")
fit <- glm(accuracy~noise,data=data[data$abs_slope==0.02,],family=binomial())
summary(fit)
plot(fit)
predict(fit, type="response")
library(ggplot2)
data <- read.csv("~/wsl_files/ns201_code/analysis/accuracies.csv")
data$abs_slope <- as.factor(data$abs_slope)
names(data)
data$accuracy <- data$accuracy/100.0
data_agg <- aggregate(x=data["accuracy"],by=list(slope=data$abs_slope,noise=data$noise),FUN=function(x) c(mn = mean(x), stdev = sd(x)))
data_agg <- do.call(data.frame,data_agg)
colnames(data_agg)[3] <- "mn"
colnames(data_agg)[4] <- "stdev"
names(data_agg)
p <- ggplot(data_agg[data_agg$slope==0.02,],aes(x=noise,y=mn,color=slope)) +
geom_point() +
geom_errorbar(aes(ymin=mn-stdev,ymax=mn+stdev))+
theme_minimal() + scale_x_reverse() +
xlab("Noise (SD of Gaussian noise)") + ylab("Accuracy") + labs(color="mean slope")
p +ylim(0,NA)
library(quickpsy)
data_fit <- data <- read.csv("~/wsl_files/ns201_code/analysis/per_image.csv")
fit <-  quickpsy(data_fit, noise, correct, grouping = c("slope"))
data_fit $
fit <-  quickpsy(data_fit, noise, correct, grouping = c("exp_code","slope"),boostrap="none")
data_fit <- data <- read.csv("~/wsl_files/ns201_code/analysis/per_image.csv")
data_fit$slope <- abs(data_fit$slope)
data_fit$noise <- 0.3-data_fit$noise
fit <-  quickpsy(data_fit, noise, correct, grouping = c("exp_code","slope"),boostrap="none")
fit <-  quickpsy(data_fit, noise, correct, grouping = c("exp_code","slope"),bootstrap="none")
plot(fit,color="exp_code")
plot(fit)
plot(fit) + xlim(0,0.3)
fit <-  quickpsy(data_fit, noise, correct, grouping = c("exp_code","slope"),bootstrap="none",guess=0.5)
plot(fit) + xlim(0,0.3)
fit <-  quickpsy(data_fit, noise, correct, grouping = c("slope"),bootstrap="none",guess=0.5)
plot(fit) + xlim(0,0.3)
plot(fit) + xlim(0,0.3) + p
p + plot(fit) + xlim(0,0.3)
p +ylim(0,NA) + geom_line(data=fit$curves)
p +ylim(0,NA) + geom_line(data=fit$curves, aex(x=x,y=y,group=slope))
p +ylim(0,NA) + geom_line(data=fit$curves, aes(x=x,y=y,group=slope))
data_fit <- data <- read.csv("~/wsl_files/ns201_code/analysis/per_image.csv")
data_fit$slope <- as.factor(abs(data_fit$slope))
data_fit$noise <- 0.3-data_fit$noise
fit <-  quickpsy(data_fit, noise, correct, grouping = c("slope"),bootstrap="none",guess=0.5)
plot(fit) + xlim(0,0.3)
p +ylim(0,NA) + geom_line(data=fit$curves, aes(x=x,y=y,group=slope))
library(ggplot2)
data <- read.csv("~/wsl_files/ns201_code/analysis/accuracies.csv")
data$abs_slope <- as.factor(data$abs_slope)
names(data)
data$accuracy <- data$accuracy/100.0
data_agg <- aggregate(x=data["accuracy"],by=list(slope=data$abs_slope,noise=data$noise),FUN=function(x) c(mn = mean(x), stdev = sd(x)))
data_agg <- do.call(data.frame,data_agg)
colnames(data_agg)[3] <- "mn"
colnames(data_agg)[4] <- "stdev"
names(data_agg)
p <- ggplot(data_agg[data_agg$slope==0.02,],aes(x=noise,y=mn,color=slope)) +
geom_point() +
geom_errorbar(aes(ymin=mn-stdev,ymax=mn+stdev))+
theme_minimal() + scale_x_reverse() +
xlab("Noise (SD of Gaussian noise)") + ylab("Accuracy") + labs(color="mean slope")
library(quickpsy)
p
library(quickpsy)
data_fit <- data <- read.csv("~/wsl_files/ns201_code/analysis/per_image.csv")
data_fit$slope <- as.factor(abs(data_fit$slope))
data_fit$noise <- 0.3-data_fit$noise
fit <-  quickpsy(data_fit, noise, correct, grouping = c("slope"),bootstrap="none",guess=0.5)
plot(fit) + xlim(0,0.3)
p +ylim(0,NA) + geom_line(data=fit$curves, aes(x=x,y=y,group=slope))
p +ylim(0,NA) + geom_line(data=fit$curves, aes(x=-x,y=y,group=slope))
p +ylim(0,NA) + geom_line(data=fit$curves, aes(x=x,y=y,group=slope))
p <- ggplot(data_agg,aes(x=noise,y=mn,color=slope)) +
geom_point() +
geom_errorbar(aes(ymin=mn-stdev,ymax=mn+stdev))+
theme_minimal() + scale_x_reverse() +
xlab("Noise (SD of Gaussian noise)") + ylab("Accuracy") + labs(color="mean slope")
p
library(quickpsy)
data_fit <- data <- read.csv("~/wsl_files/ns201_code/analysis/per_image.csv")
data_fit$slope <- as.factor(abs(data_fit$slope))
data_fit$noise <- 0.3-data_fit$noise
fit <-  quickpsy(data_fit, noise, correct, grouping = c("slope"),bootstrap="none",guess=0.5)
plot(fit) + xlim(0,0.3)
p +ylim(0,NA) + geom_line(data=fit$curves, aes(x=x,y=y,group=slope))
p <- ggplot(data_agg,aes(x=noise,y=mn,color=slope)) +
geom_point() +
geom_errorbar(aes(ymin=mn-stdev,ymax=mn+stdev))+
theme_minimal()  +
xlab("Noise (SD of Gaussian noise)") + ylab("Accuracy") + labs(color="mean slope")
p
library(quickpsy)
data_fit <- data <- read.csv("~/wsl_files/ns201_code/analysis/per_image.csv")
data_fit$slope <- as.factor(abs(data_fit$slope))
data_fit$noise <- 0.3-data_fit$noise
fit <-  quickpsy(data_fit, noise, correct, grouping = c("slope"),bootstrap="none",guess=0.5)
plot(fit) + xlim(0,0.3)
p +ylim(0,NA) + geom_line(data=fit$curves, aes(x=x,y=y,group=slope))
p <- ggplot(data_agg,aes(x=0.3-noise,y=mn,color=slope)) +
geom_point() +
geom_errorbar(aes(ymin=mn-stdev,ymax=mn+stdev))+
theme_minimal()  +
xlab("Noise (SD of Gaussian noise)") + ylab("Accuracy") + labs(color="mean slope")
p
library(quickpsy)
data_fit <- data <- read.csv("~/wsl_files/ns201_code/analysis/per_image.csv")
data_fit$slope <- as.factor(abs(data_fit$slope))
data_fit$noise <- 0.3-data_fit$noise
fit <-  quickpsy(data_fit, noise, correct, grouping = c("slope"),bootstrap="none",guess=0.5)
plot(fit) + xlim(0,0.3)
p +ylim(0,NA) + geom_line(data=fit$curves, aes(x=x,y=y,group=slope))
fit <-  quickpsy(data_fit, noise, correct, grouping = c("slope"),fun = weibull_fun,bootstrap=100,guess=0.5)
library(quickpsy)
data_fit <- data <- read.csv("~/wsl_files/ns201_code/analysis/per_image.csv")
data_fit$slope <- as.factor(abs(data_fit$slope))
data_fit$noise <- 0.3-data_fit$noise
fit <-  quickpsy(data_fit, noise, correct, grouping = c("slope"),fun = weibull_fun,bootstrap=100,guess=0.5)
plot(fit) + xlim(0,0.3)
fit <-  quickpsy(data_fit, noise, correct, grouping = c("slope"),fun = logistic_fun,bootstrap=100,guess=0.5)
plot(fit) + xlim(0,0.3)
fit <-  quickpsy(data_fit, noise, correct, grouping = c("slope"),fun = logistic_fun,guess=0.5)
plot(fit) + xlim(0,0.3)
p +ylim(0,NA) + geom_line(data=fit$curves, aes(x=x,y=y,group=slope))
plot(fit) + xlim(0,0.3)
p +ylim(0,NA) + geom_line(data=fit$curves, aes(x=x,y=y,group=slope)) + xlab("0.3-Noise") + ylab("Accuracy") + theme_minimal()
p +ylim(0.3,NA) + geom_line(data=fit$curves, aes(x=x,y=y,group=slope)) + xlab("0.3-Noise") + ylab("Accuracy") + theme_minimal()
plot(fit) + xlim(0,0.3) + theme_minimal()
p +ylim(0.3,NA) + geom_line(data=fit$curves, aes(x=x,y=y,group=slope)) + xlab("0.3-Noise") + ylab("Accuracy") + theme_minimal()
library(ggplot2)
data <- read.csv("~/wsl_files/ns201_code/analysis/accuracies.csv")
data$abs_slope <- as.factor(data$abs_slope)
names(data)
data$accuracy <- data$accuracy/100.0
data_agg <- aggregate(x=data["accuracy"],by=list(slope=data$abs_slope,noise=data$noise),FUN=function(x) c(mn = mean(x), stdev = sd(x)))
data_agg <- do.call(data.frame,data_agg)
colnames(data_agg)[3] <- "mn"
colnames(data_agg)[4] <- "stdev"
names(data_agg)
p <- ggplot(data_agg[data_agg$slope==0.02,],aes(x=0.3-noise,y=mn,color=slope)) +
geom_point() +
geom_errorbar(aes(ymin=mn-stdev,ymax=mn+stdev))+
theme_minimal()  +
xlab("Noise (SD of Gaussian noise)") + ylab("Accuracy") + labs(color="mean slope")
p
p + legend(position="none")
p + theme(legend.position="none")
p <- ggplot(data_agg[data_agg$slope==0.02,],aes(x=0.3-noise,y=mn,color=slope)) +
geom_point() +
geom_errorbar(aes(ymin=mn-stdev,ymax=mn+stdev))+
theme_minimal()  +
xlab("Noise (SD of Gaussian noise)") + ylab("Accuracy") + labs(color="mean slope")
p + theme(legend.position="none")
p <- ggplot(data_agg[data_agg$slope==0.02,],aes(x=0.3-noise,y=mn,color=slope)) +
geom_point() +
geom_errorbar(aes(ymin=mn-stdev,ymax=mn+stdev))+
theme_minimal()  +
xlab("Noise (SD of Gaussian noise)") + ylab("Accuracy") + labs(color="mean slope")+
scale_x_continuous(breaks = round(seq(min(dat$x), max(dat$x), by = 0.3),1))+
scale_y_continuous(breaks = round(seq(min(dat$x), max(dat$x), by = 0.3),1))
p + theme(legend.position="none")
p <- ggplot(data_agg[data_agg$slope==0.02,],aes(x=0.3-noise,y=mn,color=slope)) +
geom_point() +
geom_errorbar(aes(ymin=mn-stdev,ymax=mn+stdev))+
theme_minimal()  +
xlab("Noise (SD of Gaussian noise)") + ylab("Accuracy") + labs(color="mean slope")+
scale_x_continuous(breaks = round(seq(0.0, 0.3, by = 0.03),1))+
scale_y_continuous(breaks = round(seq(0.3, 1.0, by = 1.0),1))
p + theme(legend.position="none")
p <- ggplot(data_agg[data_agg$slope==0.02,],aes(x=0.3-noise,y=mn,color=slope)) +
geom_point() +
geom_errorbar(aes(ymin=mn-stdev,ymax=mn+stdev))+
theme_minimal()  +
xlab("Noise (SD of Gaussian noise)") + ylab("Accuracy") + labs(color="mean slope")+
scale_x_continuous(breaks = round(seq(0.0, 0.3, by = 0.03),1))+
scale_y_continuous(breaks = round(seq(0.3, 1.0, by = 0.1),1))
p + theme(legend.position="none")
p <- ggplot(data_agg[data_agg$slope==0.02,],aes(x=0.3-noise,y=mn,color="#000000")) +
geom_point() +
geom_errorbar(aes(ymin=mn-stdev,ymax=mn+stdev))+
theme_minimal()  +
xlab("Noise (SD of Gaussian noise)") + ylab("Accuracy") + labs(color="mean slope")+
scale_x_continuous(breaks = round(seq(0.0, 0.3, by = 0.03),1))+
scale_y_continuous(breaks = round(seq(0.3, 1.0, by = 0.1),1))
p + theme(legend.position="none")
p <- ggplot(data_agg[data_agg$slope==0.02,],aes(x=0.3-noise,y=mn,color="#000000")) +
geom_point() +
geom_errorbar(aes(ymin=mn-stdev,ymax=mn+stdev))+
theme_minimal()  +
xlab("Noise (SD of Gaussian noise)") + ylab("Accuracy") + labs(color="mean slope")+
scale_x_continuous(breaks = round(seq(0.0, 0.3, by = 0.03),1))+
scale_y_continuous(breaks = round(seq(0.3, 1.0, by = 0.1),1))
p + theme(legend.position="none")
p <- ggplot(data_agg[data_agg$slope==0.04,],aes(x=0.3-noise,y=mn,color="#000000")) +
geom_point() +
geom_errorbar(aes(ymin=mn-stdev,ymax=mn+stdev))+
theme_minimal()  +
xlab("Noise (SD of Gaussian noise)") + ylab("Accuracy") + labs(color="mean slope")+
scale_x_continuous(breaks = round(seq(0.0, 0.3, by = 0.03),1))+
scale_y_continuous(breaks = round(seq(0.3, 1.0, by = 0.1),1))
p + theme(legend.position="none")
p <- ggplot(data_agg[data_agg$slope==0.06,],aes(x=0.3-noise,y=mn,color="#000000")) +
geom_point() +
geom_errorbar(aes(ymin=mn-stdev,ymax=mn+stdev))+
theme_minimal()  +
xlab("Noise (SD of Gaussian noise)") + ylab("Accuracy") + labs(color="mean slope")+
scale_x_continuous(breaks = round(seq(0.0, 0.3, by = 0.03),1))+
scale_y_continuous(breaks = round(seq(0.3, 1.0, by = 0.1),1))
p + theme(legend.position="none")
p <- ggplot(data_agg[data_agg$slope==0.02,],aes(x=0.3-noise,y=mn,color="#000000")) +
geom_point() +
geom_errorbar(aes(ymin=mn-stdev,ymax=mn+stdev))+
theme_minimal()  +
xlab("Noise (SD of Gaussian noise)") + ylab("Accuracy") + labs(color="mean slope")+
scale_x_continuous(breaks = round(seq(0.0, 0.3, by = 0.03),1))+
scale_y_continuous(breaks = round(seq(0.3, 1.0, by = 0.1),1))
p + theme(legend.position="none") + ylim(0.3,1.2)
p <- ggplot(data_agg[data_agg$slope==0.06,],aes(x=0.3-noise,y=mn,color="#000000")) +
geom_point() +
geom_errorbar(aes(ymin=mn-stdev,ymax=mn+stdev))+
theme_minimal()  +
xlab("Noise (SD of Gaussian noise)") + ylab("Accuracy") + labs(color="mean slope")+
scale_x_continuous(breaks = round(seq(0.0, 0.3, by = 0.03),1))+
scale_y_continuous(breaks = round(seq(0.3, 1.0, by = 0.1),1))
p + theme(legend.position="none") + ylim(0.3,1.1)
p <- ggplot(data_agg[data_agg$slope==0.06,],aes(x=0.3-noise,y=mn,color="#000000")) +
geom_point() +
geom_errorbar(aes(ymin=mn-stdev,ymax=mn+stdev))+
theme_minimal()  +
xlab("Noise (SD of Gaussian noise)") + ylab("Accuracy") + labs(color="mean slope")+
scale_x_continuous(breaks = round(seq(0.0, 0.3, by = 0.03),1))+
scale_y_continuous(breaks = round(seq(0.3, 1.0, by = 0.1),1))
p + theme(legend.position="none") + ylim(0.2,1.1)
p <- ggplot(data_agg[data_agg$slope==0.06,],aes(x=0.3-noise,y=mn,color="#000000")) +
geom_point() +
geom_errorbar(aes(ymin=mn-stdev,ymax=mn+stdev))+
theme_minimal()  +
xlab("Noise (SD of Gaussian noise)") + ylab("Accuracy") + labs(color="mean slope")+
scale_x_continuous(breaks = round(seq(0.0, 0.3, by = 0.03),1))+
scale_y_continuous(breaks = round(seq(0.3, 1.0, by = 0.1),1))
p + theme(legend.position="none") + ylim(0.2,1.2)
p <- ggplot(data_agg[data_agg$slope==0.02,],aes(x=0.3-noise,y=mn,color="#000000")) +
geom_point() +
geom_errorbar(aes(ymin=mn-stdev,ymax=mn+stdev))+
theme_minimal()  +
xlab("Noise (SD of Gaussian noise)") + ylab("Accuracy") + labs(color="mean slope")+
scale_x_continuous(breaks = round(seq(0.0, 0.3, by = 0.03),1))+
scale_y_continuous(breaks = round(seq(0.3, 1.0, by = 0.1),1))
p + theme(legend.position="none") + ylim(0.2,1.2)
p <- ggplot(data_agg[data_agg$slope==0.04,],aes(x=0.3-noise,y=mn,color="#000000")) +
geom_point() +
geom_errorbar(aes(ymin=mn-stdev,ymax=mn+stdev))+
theme_minimal()  +
xlab("Noise (SD of Gaussian noise)") + ylab("Accuracy") + labs(color="mean slope")+
scale_x_continuous(breaks = round(seq(0.0, 0.3, by = 0.03),1))+
scale_y_continuous(breaks = round(seq(0.3, 1.0, by = 0.1),1))
p + theme(legend.position="none") + ylim(0.2,1.2)
p <- ggplot(data_agg[data_agg$slope==0.02,],aes(x=0.3-noise,y=mn,color="#000000")) +
geom_point() +
geom_errorbar(aes(ymin=mn-stdev,ymax=mn+stdev))+
theme_minimal()  +
xlab("Noise (SD of Gaussian noise)") + ylab("Accuracy") + labs(color="mean slope")+
scale_x_continuous(breaks = round(seq(0.0, 0.3, by = 0.03),1))+
scale_y_continuous(breaks = round(seq(0.3, 1.0, by = 0.1),1))
p + theme(legend.position="none") + ylim(0.2,1.2)
p <- ggplot(data_agg[data_agg$slope==0.04,],aes(x=0.3-noise,y=mn,color="#000000")) +
geom_point() +
geom_errorbar(aes(ymin=mn-stdev,ymax=mn+stdev))+
theme_minimal()  +
xlab("Noise (SD of Gaussian noise)") + ylab("Accuracy") + labs(color="mean slope")+
scale_x_continuous(breaks = round(seq(0.0, 0.3, by = 0.03),1))+
scale_y_continuous(breaks = round(seq(0.3, 1.0, by = 0.1),1))
p + theme(legend.position="none") + ylim(0.2,1.2)
p <- ggplot(data_agg[data_agg$slope==0.06,],aes(x=0.3-noise,y=mn,color="#000000")) +
geom_point() +
geom_errorbar(aes(ymin=mn-stdev,ymax=mn+stdev))+
theme_minimal()  +
xlab("Noise (SD of Gaussian noise)") + ylab("Accuracy") + labs(color="mean slope")+
scale_x_continuous(breaks = round(seq(0.0, 0.3, by = 0.03),1))+
scale_y_continuous(breaks = round(seq(0.3, 1.0, by = 0.1),1))
p + theme(legend.position="none") + ylim(0.2,1.2)
library(quickpsy)
data_fit <- data <- read.csv("~/wsl_files/ns201_code/analysis/per_image.csv")
data_fit$slope <- as.factor(abs(data_fit$slope))
data_fit$noise <- 0.3-data_fit$noise
fit <-  quickpsy(data_fit, noise, correct, grouping = c("slope"),fun = logistic_fun,guess=0.5)
plot(fit) + xlim(0,0.3) + theme_minimal()
p +ylim(0.3,NA) + geom_line(data=fit$curves, aes(x=x,y=y,group=slope)) + xlab("0.3-Noise") + ylab("Accuracy") + theme_minimal()
plot(fit) + xlim(0,0.3) + theme_minimal()
library(quickpsy)
data_fit <- data <- read.csv("~/wsl_files/ns201_code/analysis/per_image.csv")
data_fit$slope <- as.factor(abs(data_fit$slope))
data_fit$noise <- 0.3-data_fit$noise
fit <-  quickpsy(data_fit, noise, correct, grouping = c("slope"),fun = logistic_fun,guess=0.5)
plot(fit) + coord_cartesian(xlim(0,0.3)) + theme_minimal()
library(quickpsy)
data_fit <- data <- read.csv("~/wsl_files/ns201_code/analysis/per_image.csv")
data_fit$slope <- as.factor(abs(data_fit$slope))
data_fit$noise <- 0.3-data_fit$noise
fit <-  quickpsy(data_fit, noise, correct, grouping = c("slope"),fun = logistic_fun,guess=0.5)
plot(fit) + coord_cartesian(xlim(0,0.3)) + theme_minimal()
library(quickpsy)
data_fit <- data <- read.csv("~/wsl_files/ns201_code/analysis/per_image.csv")
data_fit$slope <- as.factor(abs(data_fit$slope))
data_fit$noise <- 0.3-data_fit$noise
fit <-  quickpsy(data_fit, noise, correct, grouping = c("slope"),fun = logistic_fun,guess=0.5)
plot(fit) + coord_cartesian(xlim=c(0,0.3)) + theme_minimal()
plot(fit) + coord_cartesian(xlim=c(0,0.3)) + theme_minimal() + xlab("0.3-Noise (SD of Gaussian)") + ylab("Fractional Accuracy") + labs(color="Slope")
names(fit)
fit["thresholds"]
library(quickpsy)
data_fit <- data <- read.csv("~/wsl_files/ns201_code/analysis/per_image.csv")
data_fit$slope <- as.factor(abs(data_fit$slope))
data_fit$noise <- 0.3-data_fit$noise
fit <-  quickpsy(data_fit, noise, correct, grouping = c("slope","exp_code"),fun = logistic_fun,guess=0.5)
plot(fit) + coord_cartesian(xlim=c(0,0.3)) + theme_minimal() + xlab("0.3-Noise (SD of Gaussian)") + ylab("Fractional Accuracy") + labs(color="Slope")
fit["thresholds"]
write.csv("test.csv",fit["thresholds"])
write.csv(fit["thresholds"],"test.csv")
write.csv(fit["thresholds"],"test.csv")
setwd("~/wsl_files/ns201_code")
write.csv(fit["thresholds"],"test.csv")
library(ggplot2)
data <- read.csv("~/wsl_files/ns201_code/test.csv")
names(data)
p <- ggplot(data,aes(x=thresholds.thre)) + geom_histogram()
p
p <- ggplot(data,aes(x=thresholds.thre)) + geom_histogram() + facet_grid(.~thresholds.slope)
p
data$thresholds.thre <- 0.3-data$thresholds.thre
names(data)
data$thresholds.thre <- 0.3-data$thresholds.thre
p <- ggplot(data,aes(x=thresholds.thre)) + geom_histogram() + facet_grid(.~thresholds.slope)
p
p <- ggplot(data[data$thresholds.thre>0,],aes(x=thresholds.thre)) + geom_histogram() + facet_grid(.~thresholds.slope)
p
p <- ggplot(data[data$thresholds.thre>0 & data$thresholds.thre<0.3,],aes(x=thresholds.thre)) + geom_histogram() + facet_grid(.~thresholds.slope)
p
p <- ggplot(data[data$thresholds.thre>0 & data$thresholds.thre<0.3,],aes(x=thresholds.thre)) + geom_histogram(bindwidth=8) + facet_grid(.~thresholds.slope)
p
p <- ggplot(data[data$thresholds.thre>0 & data$thresholds.thre<0.3,],aes(x=thresholds.thre)) + geom_histogram(bins=8) + facet_grid(.~thresholds.slope)
p
p <- ggplot(data[data$thresholds.thre>0 & data$thresholds.thre<0.3,],aes(x=thresholds.thre)) + geom_histogram(bins=6) + facet_grid(.~thresholds.slope)
p
p <- ggplot(data[data$thresholds.thre>0 & data$thresholds.thre<0.3,],aes(x=thresholds.thre)) + geom_histogram(bins=8) + facet_grid(.~thresholds.slope)
p
p <- ggplot(data[data$thresholds.thre>0 & data$thresholds.thre<0.3,],aes(x=thresholds.thre)) + geom_histogram(bins=10) + facet_grid(.~thresholds.slope)
p
p <- ggplot(data[data$thresholds.thre>0 & data$thresholds.thre<0.3,],aes(x=thresholds.thre)) + geom_histogram(bins=8) + facet_grid(.~thresholds.slope)
p
p <- ggplot(data[data$thresholds.thre>0 & data$thresholds.thre<0.3,],aes(x=thresholds.thre,color="black",fill=slope)) + geom_histogram(bins=8) + facet_grid(.~thresholds.slope)
p
p <- ggplot(data[data$thresholds.thre>0 & data$thresholds.thre<0.3,],aes(x=thresholds.thre,color="black",fill=thresholds.slope)) + geom_histogram(bins=8) + facet_grid(.~thresholds.slope)
p
p <- ggplot(data[data$thresholds.thre>0 & data$thresholds.thre<0.3,],aes(x=thresholds.thre,color="#000000",fill=thresholds.slope)) + geom_histogram(bins=8) + facet_grid(.~thresholds.slope)
p
p <- ggplot(data[data$thresholds.thre>0 & data$thresholds.thre<0.3,],aes(x=thresholds.thre,fill=thresholds.slope)) + geom_histogram(color="#000000",bins=8) + facet_grid(.~thresholds.slope)
p
p <- ggplot(data[data$thresholds.thre>0 & data$thresholds.thre<0.3,],aes(x=thresholds.thre,fill=thresholds.slope)) + geom_histogram(color="#000000",bins=8) + facet_grid(.~thresholds.slope)
p + theme_minimal() + xlab("Noise Threshold") + ylab("Count") + theme(legend.position = "none")
p <- ggplot(data[data$thresholds.thre>0 & data$thresholds.thre<0.3,],aes(x=thresholds.thre,fill=thresholds.slope)) + geom_histogram(color="#000000",bins=8) + facet_grid(thresholds.slope~.)
p + theme_minimal() + xlab("Noise Threshold") + ylab("Count") + theme(legend.position = "none")
data$thresholds.thre <- data$thresholds.thre
p <- ggplot(data[data$thresholds.thre>0 & data$thresholds.thre<0.3,],aes(x=thresholds.thre,fill=thresholds.slope)) + geom_histogram(color="#000000",bins=8) + facet_grid(thresholds.slope~.)
p + theme_minimal() + xlab("Noise Threshold") + ylab("Count") + theme(legend.position = "none")
library(ggplot2)
data <- read.csv("~/wsl_files/ns201_code/test.csv")
names(data)
data$thresholds.thre <- data$thresholds.thre
p <- ggplot(data[data$thresholds.thre>0 & data$thresholds.thre<0.3,],aes(x=thresholds.thre,fill=thresholds.slope)) + geom_histogram(color="#000000",bins=8) + facet_grid(thresholds.slope~.)
p + theme_minimal() + xlab("Noise Threshold") + ylab("Count") + theme(legend.position = "none")
data$thresholds.thre <- 0.3-data$thresholds.thre
p <- ggplot(data[data$thresholds.thre>0 & data$thresholds.thre<0.3,],aes(x=thresholds.thre,fill=thresholds.slope)) + geom_histogram(color="#000000",bins=8) + facet_grid(thresholds.slope~.)
p + theme_minimal() + xlab("Noise Threshold") + ylab("Count") + theme(legend.position = "none")
